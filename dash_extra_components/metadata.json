{
  "src/lib/components/Notification.react.js": {
    "description": "",
    "displayName": "DashNotification",
    "methods": [
      {
        "name": "onPermission",
        "docblock": null,
        "modifiers": [],
        "params": [
          {
            "name": "permission",
            "type": null
          }
        ],
        "returns": null
      }
    ],
    "props": {
      "id": {
        "type": {
          "name": "string"
        },
        "required": false,
        "description": ""
      },
      "permission": {
        "type": {
          "name": "enum",
          "value": [
            {
              "value": "'denied'",
              "computed": false
            },
            {
              "value": "'granted'",
              "computed": false
            },
            {
              "value": "'default'",
              "computed": false
            },
            {
              "value": "'unsupported'",
              "computed": false
            }
          ]
        },
        "required": false,
        "description": "Permission granted by the user (READONLY)"
      },
      "title": {
        "type": {
          "name": "string"
        },
        "required": true,
        "description": ""
      },
      "lang": {
        "type": {
          "name": "string"
        },
        "required": false,
        "description": "The notification's language, as specified using a DOMString representing a BCP 47 language tag."
      },
      "body": {
        "type": {
          "name": "string"
        },
        "required": false,
        "description": "A DOMString representing the body text of the notification, which will be displayed below the title."
      },
      "badge": {
        "type": {
          "name": "string"
        },
        "required": false,
        "description": "A USVString containing the URL of the image used to represent the notification when there is not enough space to display the notification itself."
      },
      "tag": {
        "type": {
          "name": "string"
        },
        "required": false,
        "description": "A DOMString representing an identifying tag for the notification."
      },
      "icon": {
        "type": {
          "name": "string"
        },
        "required": false,
        "description": "A USVString containing the URL of an icon to be displayed in the notification."
      },
      "image": {
        "type": {
          "name": "string"
        },
        "required": false,
        "description": "a USVString containing the URL of an image to be displayed in the notification."
      },
      "vibrate": {
        "type": {
          "name": "union",
          "value": [
            {
              "name": "number"
            },
            {
              "name": "arrayOf",
              "value": {
                "name": "number"
              }
            }
          ]
        },
        "required": false,
        "description": "A vibration pattern for the device's vibration hardware to emit when the notification fires."
      },
      "require_interaction": {
        "type": {
          "name": "bool"
        },
        "required": false,
        "description": "Indicates that a notification should remain active until the user clicks or dismisses it, rather than closing automatically. The default value is false.",
        "defaultValue": {
          "value": "false",
          "computed": false
        }
      },
      "n_clicks": {
        "type": {
          "name": "number"
        },
        "required": false,
        "description": "",
        "defaultValue": {
          "value": "0",
          "computed": false
        }
      },
      "n_clicks_timestamp": {
        "type": {
          "name": "number"
        },
        "required": false,
        "description": "",
        "defaultValue": {
          "value": "-1",
          "computed": false
        }
      },
      "n_closes": {
        "type": {
          "name": "number"
        },
        "required": false,
        "description": "",
        "defaultValue": {
          "value": "0",
          "computed": false
        }
      },
      "n_closes_timestamp": {
        "type": {
          "name": "number"
        },
        "required": false,
        "description": "",
        "defaultValue": {
          "value": "-1",
          "computed": false
        }
      },
      "setProps": {
        "type": {
          "name": "func"
        },
        "required": false,
        "description": ""
      },
      "key": {
        "type": {
          "name": "string"
        },
        "required": false,
        "description": ""
      }
    }
  },
  "src/lib/components/SuggestionsInput.react.js": {
    "description": "An `<input>`/<textarea> with associated triggers that will display a menu\nwith suggestions.",
    "displayName": "SuggestionsInput",
    "methods": [
      {
        "name": "requestSuggestions",
        "docblock": null,
        "modifiers": [],
        "params": [
          {
            "name": "route",
            "type": null
          },
          {
            "name": "captured",
            "type": null
          }
        ],
        "returns": null
      },
      {
        "name": "setFilteredOptions",
        "docblock": null,
        "modifiers": [],
        "params": [
          {
            "name": "options",
            "type": null
          }
        ],
        "returns": null
      },
      {
        "name": "updateSuggestions",
        "docblock": null,
        "modifiers": [],
        "params": [
          {
            "name": "{captured, options}",
            "type": null
          }
        ],
        "returns": null
      },
      {
        "name": "onKeyUp",
        "docblock": null,
        "modifiers": [],
        "params": [
          {
            "name": "e",
            "type": null
          }
        ],
        "returns": null
      },
      {
        "name": "filterSuggestions",
        "docblock": null,
        "modifiers": [],
        "params": [
          {
            "name": "captured",
            "type": null
          },
          {
            "name": "options",
            "type": null
          }
        ],
        "returns": null
      },
      {
        "name": "onChange",
        "docblock": null,
        "modifiers": [],
        "params": [
          {
            "name": "e",
            "type": null
          }
        ],
        "returns": null
      },
      {
        "name": "preventTabNavigation",
        "docblock": null,
        "modifiers": [],
        "params": [
          {
            "name": "e",
            "type": null
          }
        ],
        "returns": null
      },
      {
        "name": "onSuggestion",
        "docblock": null,
        "modifiers": [],
        "params": [
          {
            "name": "suggestion",
            "type": null
          }
        ],
        "returns": null
      },
      {
        "name": "resetSuggestions",
        "docblock": null,
        "modifiers": [],
        "params": [],
        "returns": null
      }
    ],
    "props": {
      "id": {
        "type": {
          "name": "string"
        },
        "required": false,
        "description": ""
      },
      "className": {
        "type": {
          "name": "string"
        },
        "required": false,
        "description": "CSS class for the container of the input and suggestions modal."
      },
      "style": {
        "type": {
          "name": "object"
        },
        "required": false,
        "description": "Style object given to the container of the input and suggestions modal."
      },
      "multi_line": {
        "type": {
          "name": "bool"
        },
        "required": false,
        "description": "true -> <textarea>\nfalse -> <input>",
        "defaultValue": {
          "value": "false",
          "computed": false
        }
      },
      "value": {
        "type": {
          "name": "string"
        },
        "required": false,
        "description": "Current value of the input/textarea",
        "defaultValue": {
          "value": "''",
          "computed": false
        }
      },
      "suggestions": {
        "type": {
          "name": "arrayOf",
          "value": {
            "name": "shape",
            "value": {
              "trigger": {
                "name": "string",
                "description": "Activate these suggestions when the trigger is entered in the\ninput value.",
                "required": false
              },
              "options": {
                "name": "arrayOf",
                "value": {
                  "name": "custom",
                  "raw": "OptionsShape"
                },
                "description": "The options this suggestion trigger will display.",
                "required": false
              }
            }
          }
        },
        "required": true,
        "description": "Suggestions array containing the options to show\nwhen a trigger is activated."
      },
      "allow_space_in_suggestions": {
        "type": {
          "name": "bool"
        },
        "required": false,
        "description": "Continue capturing the input when a space is entered while\nthe suggestion menu is open.",
        "defaultValue": {
          "value": "false",
          "computed": false
        }
      },
      "include_trigger": {
        "type": {
          "name": "bool"
        },
        "required": false,
        "description": "Include the trigger in the rendered value."
      },
      "suggestions_className": {
        "type": {
          "name": "string"
        },
        "required": false,
        "description": "Given to the suggestions modal."
      },
      "suggestions_style": {
        "type": {
          "name": "object"
        },
        "required": false,
        "description": "Given and merged with the default style to the suggestions modal."
      },
      "suggestion_style": {
        "type": {
          "name": "object"
        },
        "required": false,
        "description": "Style of the suggestion elements (single suggestion)."
      },
      "suggestion_className": {
        "type": {
          "name": "string"
        },
        "required": false,
        "description": "CSS class for a single suggestion element."
      },
      "suggestion_selected_style": {
        "type": {
          "name": "object"
        },
        "required": false,
        "description": "Style of a suggestion while it is selected."
      },
      "suggestion_selected_className": {
        "type": {
          "name": "string"
        },
        "required": false,
        "description": "CSS class for a suggestion while it is selected."
      },
      "captured": {
        "type": {
          "name": "string"
        },
        "required": false,
        "description": "Readonly prop containing the typed string since the last trigger. (READONLY)"
      },
      "filtered_options": {
        "type": {
          "name": "arrayOf",
          "value": {
            "name": "custom",
            "raw": "OptionsShape"
          }
        },
        "required": false,
        "description": "Currently displayed suggestions. Update in a callback to set the currently displayed suggestions.\n\n@example\n```\napp.callback(Output('suggestions', 'filtered_options'),\n             [Input('suggestions', 'captured')],\n             [State('suggestions', 'current_trigger')]\n```"
      },
      "current_trigger": {
        "type": {
          "name": "string"
        },
        "required": false,
        "description": "The current trigger. (READONLY)"
      },
      "fuzzy": {
        "type": {
          "name": "string"
        },
        "required": false,
        "description": "If true match all options containing the captured input\nelse match suggestions from the start of the line."
      },
      "setProps": {
        "type": {
          "name": "any"
        },
        "required": false,
        "description": ""
      }
    }
  },
  "src/lib/components/TableOfContents.react.js": {
    "description": "Build a table of contents list with links to the headers tag.",
    "displayName": "TableOfContents",
    "methods": [
      {
        "name": "buildToc",
        "docblock": null,
        "modifiers": [],
        "params": [],
        "returns": null
      }
    ],
    "props": {
      "id": {
        "type": {
          "name": "string"
        },
        "required": false,
        "description": "Unique identifier for the component."
      },
      "className": {
        "type": {
          "name": "string"
        },
        "required": false,
        "description": "className for the top ul component."
      },
      "content_selector": {
        "type": {
          "name": "string"
        },
        "required": false,
        "description": "Selector to search for building the toc."
      },
      "headings": {
        "type": {
          "name": "arrayOf",
          "value": {
            "name": "string"
          }
        },
        "required": false,
        "description": "Headings tag name to search.\nThe table of contents will be leveled according to the order of\nthe headings prop.",
        "defaultValue": {
          "value": "['h1', 'h2', 'h3', 'h4', 'h5']",
          "computed": false
        }
      },
      "table_of_contents": {
        "type": {
          "name": "arrayOf",
          "value": {
            "name": "shape",
            "value": {
              "content": {
                "name": "string",
                "description": "The content of the heading.",
                "required": false
              },
              "level": {
                "name": "number",
                "description": "The level of the heading.",
                "required": false
              },
              "refId": {
                "name": "string",
                "description": "The id to reference on the page. (scroll to)",
                "required": false
              }
            }
          }
        },
        "required": false,
        "description": "The table of content in object form."
      },
      "style": {
        "type": {
          "name": "object"
        },
        "required": false,
        "description": "Style of the parent <ul>"
      },
      "setProps": {
        "type": {
          "name": "any"
        },
        "required": false,
        "description": ""
      }
    }
  }
}