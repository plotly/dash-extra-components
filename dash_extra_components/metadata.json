{"src/lib/components/SuggestionsInput.react.js": {"props": {"suggestions_style": {"required": false, "type": {"name": "object"}, "description": "Given and merged with the default style to the suggestions modal."}, "style": {"required": false, "type": {"name": "object"}, "description": "Style object given to the container of the input and suggestions modal."}, "suggestion_selected_style": {"required": false, "type": {"name": "object"}, "description": "Style of a suggestion while it is selected."}, "suggestion_className": {"required": false, "type": {"name": "string"}, "description": "CSS class for a single suggestion element."}, "suggestion_style": {"required": false, "type": {"name": "object"}, "description": "Style of the suggestion elements (single suggestion)."}, "allow_space_in_suggestions": {"defaultValue": {"computed": false, "value": "false"}, "required": false, "type": {"name": "bool"}, "description": "Continue capturing the input when a space is entered while\r\nthe suggestion menu is open."}, "setProps": {"required": false, "type": {"name": "any"}, "description": ""}, "suggestions": {"required": true, "type": {"name": "arrayOf", "value": {"name": "shape", "value": {"trigger": {"required": false, "name": "string", "description": "Activate these suggestions when the trigger is entered in the\r\ninput value."}, "options": {"required": false, "name": "arrayOf", "value": {"raw": "OptionsShape", "name": "custom"}, "description": "The options this suggestion trigger will display."}}}}, "description": "Suggestions array containing the options to show\r\nwhen a trigger is activated."}, "value": {"defaultValue": {"computed": false, "value": "''"}, "required": false, "type": {"name": "string"}, "description": "Current value of the input/textarea"}, "current_trigger": {"required": false, "type": {"name": "string"}, "description": "The current trigger. (READONLY)"}, "className": {"required": false, "type": {"name": "string"}, "description": "CSS class for the container of the input and suggestions modal."}, "suggestion_selected_className": {"required": false, "type": {"name": "string"}, "description": "CSS class for a suggestion while it is selected."}, "include_trigger": {"required": false, "type": {"name": "bool"}, "description": "Include the trigger in the rendered value."}, "filtered_options": {"required": false, "type": {"name": "arrayOf", "value": {"raw": "OptionsShape", "name": "custom"}}, "description": "Currently displayed suggestions. Update in a callback to set the currently displayed suggestions.\r\n\n@example\r\n```\r\napp.callback(Output('suggestions', 'filtered_options'),\r\n             [Input('suggestions', 'captured')],\r\n             [State('suggestions', 'current_trigger')]\r\n```"}, "multi_line": {"defaultValue": {"computed": false, "value": "false"}, "required": false, "type": {"name": "bool"}, "description": "true -> <textarea>\r\nfalse -> <input>"}, "fuzzy": {"required": false, "type": {"name": "string"}, "description": "If true match all options containing the captured input\r\nelse match suggestions from the start of the line."}, "suggestions_className": {"required": false, "type": {"name": "string"}, "description": "Given to the suggestions modal."}, "id": {"required": false, "type": {"name": "string"}, "description": ""}, "captured": {"required": false, "type": {"name": "string"}, "description": "Readonly prop containing the typed string since the last trigger. (READONLY)"}}, "displayName": "SuggestionsInput", "description": "An `<input>`/<textarea> with associated triggers that will display a menu\r\nwith suggestions.", "methods": [{"docblock": null, "returns": null, "modifiers": [], "params": [{"type": null, "name": "route"}, {"type": null, "name": "captured"}], "name": "requestSuggestions"}, {"docblock": null, "returns": null, "modifiers": [], "params": [{"type": null, "name": "options"}], "name": "setFilteredOptions"}, {"docblock": null, "returns": null, "modifiers": [], "params": [{"type": null, "name": "{captured, options}"}], "name": "updateSuggestions"}, {"docblock": null, "returns": null, "modifiers": [], "params": [{"type": null, "name": "e"}], "name": "onKeyUp"}, {"docblock": null, "returns": null, "modifiers": [], "params": [{"type": null, "name": "captured"}, {"type": null, "name": "options"}], "name": "filterSuggestions"}, {"docblock": null, "returns": null, "modifiers": [], "params": [{"type": null, "name": "e"}], "name": "onChange"}, {"docblock": null, "returns": null, "modifiers": [], "params": [{"type": null, "name": "e"}], "name": "preventTabNavigation"}, {"docblock": null, "returns": null, "modifiers": [], "params": [{"type": null, "name": "suggestion"}], "name": "onSuggestion"}, {"docblock": null, "returns": null, "modifiers": [], "params": [], "name": "resetSuggestions"}]}, "src/lib/components/Pager.react.js": {"props": {"total_items": {"required": false, "type": {"name": "number"}, "description": "The total items in the set."}, "page_style": {"required": false, "type": {"name": "object"}, "description": "Style for the page numbers."}, "style": {"required": false, "type": {"name": "object"}, "description": ""}, "pages_displayed": {"defaultValue": {"computed": false, "value": "10"}, "required": false, "type": {"name": "number"}, "description": "The number of pages displayed by the pager."}, "setProps": {"required": false, "type": {"name": "func"}, "description": ""}, "page_className": {"required": false, "type": {"name": "string"}, "description": "CSS class for the page numbers."}, "total_pages": {"required": false, "type": {"name": "number"}, "description": "Set by total_items / items_per_page"}, "start_offset": {"required": false, "type": {"name": "number"}, "description": "The starting index of the current page\r\nCan be used to slice data eg: data[start_offset: end_offset]"}, "pages": {"required": false, "type": {"name": "array"}, "description": "Read only, the currently displayed pages numbers."}, "className": {"required": false, "type": {"name": "string"}, "description": ""}, "items_per_page": {"defaultValue": {"computed": false, "value": "10"}, "required": false, "type": {"name": "number"}, "description": "The number of items a page contains."}, "end_offset": {"required": false, "type": {"name": "number"}, "description": "The end index of the current page."}, "current_page": {"defaultValue": {"computed": false, "value": "1"}, "required": false, "type": {"name": "number"}, "description": "The current selected page."}, "id": {"required": false, "type": {"name": "string"}, "description": ""}}, "displayName": "Pager", "description": "Paging for dash apps.", "methods": [{"docblock": null, "returns": null, "modifiers": [], "params": [{"type": null, "name": "page"}], "name": "onChangePage"}]}, "src/lib/components/TableOfContents.react.js": {"props": {"style": {"required": false, "type": {"name": "object"}, "description": "Style of the parent <ul>"}, "table_of_contents": {"required": false, "type": {"name": "arrayOf", "value": {"name": "shape", "value": {"content": {"required": false, "name": "string", "description": "The content of the heading."}, "refId": {"required": false, "name": "string", "description": "The id to reference on the page. (scroll to)"}, "level": {"required": false, "name": "number", "description": "The level of the heading."}}}}, "description": "The table of content in object form."}, "content_selector": {"required": false, "type": {"name": "string"}, "description": "Selector to search for building the toc."}, "className": {"required": false, "type": {"name": "string"}, "description": "className for the top ul component."}, "headings": {"defaultValue": {"computed": false, "value": "['h1', 'h2', 'h3', 'h4', 'h5']"}, "required": false, "type": {"name": "arrayOf", "value": {"name": "string"}}, "description": "Headings tag name to search.\r\nThe table of contents will be leveled according to the order of\r\nthe headings prop."}, "setProps": {"required": false, "type": {"name": "any"}, "description": ""}, "id": {"required": false, "type": {"name": "string"}, "description": "Unique identifier for the component."}}, "displayName": "TableOfContents", "description": "Build a table of contents list with links to the headers tag.", "methods": [{"docblock": null, "returns": null, "modifiers": [], "params": [], "name": "buildToc"}]}}